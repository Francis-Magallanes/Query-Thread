<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <LinearLayout
        android:id="@+id/linearLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/appBarLayout"
            android:layout_width="match_parent"
            android:layout_height="98dp"
            android:theme="@style/Theme.QT_Project.AppBarOverlay">

            <androidx.constraintlayout.widget.ConstraintLayout
                android:layout_width="match_parent"
                android:layout_height="103dp">

                <ImageView
                    android:id="@+id/imageView"
                    android:layout_width="101dp"
                    android:layout_height="61dp"
                    android:layout_marginStart="60dp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent"
                    app:srcCompat="@drawable/logo" />

                <TextView
                    android:id="@+id/title"
                    android:layout_width="155dp"
                    android:layout_height="56dp"
                    android:layout_marginStart="10dp"
                    android:fontFamily="sans-serif"
                    android:gravity="center"
                    android:minHeight="?actionBarSize"
                    android:padding="@dimen/appbar_padding"
                    android:text="Query Thread"
                    android:textAppearance="@style/TextAppearance.Widget.AppCompat.Toolbar.Title"
                    android:textSize="20dp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="0.183"
                    app:layout_constraintStart_toEndOf="@+id/imageView"
                    app:layout_constraintTop_toTopOf="parent"
                    app:layout_constraintVertical_bias="0.553" />
            </androidx.constraintlayout.widget.ConstraintLayout>

        </com.google.android.material.appbar.AppBarLayout>

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="632dp">

            <TextView
                android:id="@+id/textView6"
                android:layout_width="367dp"
                android:layout_height="56dp"
                android:layout_marginStart="24dp"
                android:layout_marginTop="32dp"
                android:text="Initializing a timer interrupt in Zedboard Development Board"
                android:textSize="20dp"
                android:textStyle="bold"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <TextView
                android:id="@+id/textView7"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="24dp"
                android:layout_marginTop="12dp"
                android:text="by Kiko Esplana"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView6" />

            <TextView
                android:id="@+id/textView8"
                android:layout_width="363dp"
                android:layout_height="105dp"
                android:layout_marginTop="24dp"
                android:text="I want to know what are the neccesary steps to initialize the timer in the software side of the zedboard and the things to consider when initializing the timer.
                In my system, I don't have a interrupt controller. I use the generic interrupt controller in my system. Here is the block diagram of the system: "
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView7" />

            <ImageView
                android:id="@+id/imageView3"
                android:layout_width="326dp"
                android:layout_height="159dp"
                android:layout_marginTop="16dp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.494"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView8"
                app:srcCompat="@drawable/system_zedboard" />

            <TextView
                android:id="@+id/textView10"
                android:layout_width="127dp"
                android:layout_height="24dp"
                android:layout_marginStart="4dp"
                android:layout_marginTop="16dp"
                android:text="--------Answer: "
                android:textSize="18dp"
                android:textStyle="bold"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/imageView3" />

            <TextView
                android:id="@+id/textView11"
                android:layout_width="341dp"
                android:layout_height="121dp"
                android:layout_marginStart="48dp"
                android:layout_marginTop="8dp"
                android:text="You need to first initialize the timer through XTmrCtr_Initialize() function. Once this is done, connect it to the generic interuppt controller using XScuGic_Connect(). Also, set the priority trigger through XScuGic_SetPriorityTriggerType().
Once this initialization is done, you may want to set the timer as int mode, auto reload, and down count through the XTmrCtr_SetOptions(). Use the XtmrCtr_SetResetValue to set the reset value of the timer."
                android:textSize="12dp"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView12" />

            <TextView
                android:id="@+id/textView12"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="48dp"
                android:layout_marginTop="8dp"
                android:text="by Francis John Magallanes"
                android:textSize="10dp"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView10" />
        </androidx.constraintlayout.widget.ConstraintLayout>

    </LinearLayout>

</androidx.coordinatorlayout.widget.CoordinatorLayout>